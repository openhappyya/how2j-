package My;
import java.util.Scanner;
public class test {

	public static void main(String[] args)
	{
		int[] a=new int[5];
		for(int i=0;i<5;i++) {
			a[i]=(int)(Math.random()*100);
		}
		int minNumber=a[0];
		for(int i=0;i<5;i++) {
			if(a[i]<minNumber) {
				minNumber=a[i];
			}
		}
		System.out.println("最小值为"+minNumber);
}
}
//练习-数组最小值
package My;
import java.util.Scanner;
public class test {

	public static void main(String[] args)
	{
		int number;
		a
		System.out.println("反转前");
		for(int i=0;i<5;i++) {
			System.out.println(a[i]);
		}
		for(int i=0;i<a.length/2;i++) {
			number=a[a.length-i-1];
			a[a.length-i-1]=a[i];
			a[i]=number;
		}
		System.out.println("反转后");
		for(int i=0;i<5;i++) {
			System.out.println(a[i]);
		}
		
	}
}
//练习-数组反转
package My;
import java.util.Scanner;
public class test {

	public static void main(String[] args)
	{
		int[] a= {(int) (Math.random()*100),(int) (Math.random()*100),(int) (Math.random()*100),(int) (Math.random()*100),(int) (Math.random()*100)};
		System.out.println("排序前");
		for(int i=0;i<5;i++) {
			System.out.println(a[i]);
		}
		//正排序法
		for(int i=0;i<a.length-1;i++) {
			for(int j=i+1;j<a.length;j++) {
				if(a[i]<a[j]) {
					int temp=a[i];
					a[i]=a[j];
					a[j]=temp;
				}
			}
		}
		System.out.println("正排序法：");
		for(int i=0;i<5;i++) {
			System.out.println(a[i]);
		}
		//冒泡排序法
		for(int i=0;i<a.length;i++) {
			for(int j=0;j<a.length-i-1;j++) {
				
			}
		}
		System.out.println("冒泡排序法：");
		for(int i=0;i<5;i++) {
			System.out.println(a[i]);
		}
		
		
	}
}
//练习-排序
package My;
import java.util.Scanner;
public class test {

	public static void main(String[] args)
	{
		int[] a= {(int) (Math.random()*100),(int) (Math.random()*100),(int) (Math.random()*100),(int) (Math.random()*100),(int) (Math.random()*100)};
		System.out.println("随机数为：");
		for(int i=0;i<5;i++) {
			System.out.println(a[i]);
		}
		int temp=a[0];
		for(int i:a) {
			if(temp<i) {
				temp=i;
			}
		}
		System.out.println("最大值为：");
		System.out.println(temp);
		
	}
}
//练习-最大值
package My;
import java.util.Scanner;
public class test {

	public static void main(String[] args)
	{
		int[] a=new int[(int)( Math.random()*5)+5];
		int[] b=new int[(int)( Math.random()*5)+5];
		System.out.println("数组a为");
		for(int i=0;i<a.length;i++) {
			a[i]=(int) (Math.random()*100);
			System.out.println(a[i]);
		}
		System.out.println("数组b为");
		for(int i=0;i<b.length;i++) {
			b[i]=(int) (Math.random()*100);
			System.out.println(b[i]);
		}
		int[] c=new int[a.length+b.length];
		System.arraycopy(a, 0, c, 0, a.length);
		System.arraycopy(b, 0, c, a.length, b.length);
		System.out.println("c数组为：");
		for(int i = 0;i<c.length;i++) {
			System.out.println(c[i]);
		}
	}
}
//练习-合并数组
package My;
import java.util.Scanner;
public class test {

	public static void main(String[] args)
	{
		int temp=0,c = 0,b=0;
		int[][] a=new int[5][5];
		for(int i=0;i<5;i++) {
			for(int j=0;j<5;j++) {
				a[i][j]=(int)(Math.random()*100);
				if(a[i][j]>temp) {
					temp=a[i][j];
					c=i;
					b=j;
				}
			}
		}
		System.out.println("最大值为："+temp);
		System.out.println("其坐标为"+"["+c+"]"+"["+b+"]");
		for(int i=0;i<5;i++) {
			for(int j=0;j<5;j++) {
				System.out.print(a[i][j]+" ");
			}
			System.out.println(" ");
		}
		
	}
}
//练习-二维数组
package My;
import java.util.Arrays;
import java.util.Scanner;
public class test {

		public static void main(String[] args)
		{
			int[][] a=new int[5][8];
			int[] b=new int[40];
			int p=0;
			
			System.out.println("二维数组为：");
			for(int i=0;i<8;i++) {
				for(int j=0;j<5;j++) {
					a[j][i]=(int) (Math.random()*100);
					System.out.print(a[j][i]+" ");
				}
				System.out.println(" ");
			}
			for(int i=0;i<8;i++) {
				for(int j=0;j<5;j++) {
					b[p]=a[j][i];
					p++;
				}
			}
			
			Arrays.sort(b);
			p=0;
			System.out.println(""+Arrays.toString(b));
			for(int i=0;i<8;i++) {
				for(int j=0;j<5;j++) {
					a[j][i]=b[p];
					p++;
				}
			}
			System.out.println("排序后：");
			for(int i=0;i<8;i++) {
				for(int j=0;j<5;j++) {
					System.out.print(a[j][i]+" ");
				}
				System.out.println(" ");
			}
		}
		

}
//练习-二维数组排序 
package My;
import java.util.Arrays;
import java.util.Scanner;
public class Item extends Armor{
	int protectStandard;

		public static void main(String[] args)
		{
			Item buJia=new Item();
			Item suoZiJia=new Item();
			buJia.name="布甲";
			buJia.prise=300;
			buJia.protectStandard=15;
			suoZiJia.name="锁子甲";
			suoZiJia.prise=500;
			suoZiJia.protectStandard=40;
		}
		

}
//练习-护甲
package My;
import java.util.Arrays;
import java.util.Scanner;
public class Hero extends Support{

	String name;
			int hp;

}

package My;

public class Support {
	public void heal() {
		System.out.println("治疗");
	}
	public void heal(Hero h) {
		System.out.println("为"+h.name+"加血");
	}
	public void heal(Hero h,int hp) {
		System.out.println("为"+h.name+"加血"+hp);
	}

}
//练习-治疗
package My;
import java.util.Arrays;
import java.util.Scanner;
public class Hero{
	String name;
	float HP;
	float armor;
	int moveSpeed;

	public Hero(String heroName,float heroHP,float heroArmor,int heroMoveSpeed) {
		name=heroName;
		HP=heroHP;
		armor=heroArmor;
		moveSpeed=heroMoveSpeed;
	}
	public static void main(String[] args) {
		Hero garen=new Hero("盖伦", 383, (float) 22.5,10);
	}


}
//练习-构造方法
package first;
import java.util.Arrays;
import java.util.Scanner;
public class Hero{
	String name;
	float HP;
	float armor;
	int moveSpeed;
	public Hero(String name,float HP) {
		this.name=name;
		this.HP=HP;
		System.out.println("一个参数的构造方法");
	}

	public Hero(String name,float HP,float armor,int moveSpeed) {
		this(name,HP);
		System.out.println("两个参数的构造方法");
		this.name=name;
		this.HP=HP;
		this.armor=armor;
		this.moveSpeed=moveSpeed;
	}
	public static void main(String[] args) {
		Hero zl=new Hero("涨了",22);
		Hero garen=new Hero("盖伦", 383, (float) 22.5,10);
		System.out.println(garen.name);
	}


}
//练习-构造方法(this)
package My;
import java.util.Arrays;
import java.util.Scanner;
public class Hero {
    private Hero() {
	}
    private static Hero garen=new Hero();
    public static Hero getGaren() {
		return garen;
	}
    public static void main(String[] args) {
		Hero g1=Hero.getGaren();
		Hero g2=Hero.getGaren();
		System.out.println(g1==g2);
	}
}

package My;
import java.util.Arrays;
import java.util.Scanner;
public class Item {
    private Item() {
	}
    private static Item gi;
    public static Item getItem() {
		if(gi==null) {
			gi=new Item();
		}
		return gi;
	}
    public static void main(String[] args) {
		Item g1=Item.getItem();
		Item g2=Item.getItem();
		System.out.println(g1==g2);
	}
}
//练习-单例模式 
package My;

public class Hero {
	public static void main(String[] args) {
		for(HeroType h : HeroType.values()) {
			switch (h) {
			case TANK: 
				System.out.println("坦克");
				break;
			case WIZARD:
				System.out.println("法师");
				break;
			case ASSASSIN:
				System.out.println("刺客");
				break;
			case ASSIST:
				System.out.println("辅助");
				break;
			case WARRIOR:
				System.out.println("近战");
				break;
			case RANGED:
				System.out.println("远程");
				break;
			case PUSH:
				System.out.println("推进");
				break;
			case FARMING:
				System.out.println("打野");
				break;
			}
		}
		
	}

}
package My;

public enum HeroType {
	TANK,WIZARD,ASSASSIN,ASSIST,WARRIOR,RANGED,PUSH,FARMING;

}
//练习-枚举
package My;

public interface Healer{
	public void heal();

}
package My;

public class Support extends Hero implements Healer{

	public void heal() {
		System.out.println("治疗英雄中");
	}
}
//练习-接口
package My;

public class MagicPotion extends Item{
	public void effect() {
		System.out.println("蓝瓶使用后，可以回魔法");
	}

}
package My;
import java.util.Arrays;
import java.util.Scanner;
public class Item {
    public void effect() {
		System.out.println("物品使用后可以有效果");
	}
}
//练习-重写
package My;

public class testmain {
	public static void main(String[] args) {
		Hero garen=new Hero();
		Mortal adap=new ADAPHero();
		Mortal ad=new ADHero();
		Mortal ap=new APHero();
		garen.kill(adap);
		garen.kill(ap);
		garen.kill(ad);
		
	}
	

}
package My;

public class Hero {
	public void kill(Mortal m) {
		m.die();
	}
}
package My;

public class ADAPHero implements Mortal{
	public void die() {
		System.out.println("adap死亡");
	}

}
package My;

public interface Mortal {
	public void die() ;

}
//练习-多态
